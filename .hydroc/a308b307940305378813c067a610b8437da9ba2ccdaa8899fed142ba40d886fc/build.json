{"inputLanguage":0,"entry":"step.ts","modName":"step","outDir":"assets/Resources","profile":"release","entries":{"step.ts":{"debugSymbols":[{"lineStart":16,"lineEnd":36,"columnStart":4,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"step.ts","originalFileName":"step.ts","originalLineStart":9,"originalColumnStart":7,"parameterNames":["title","body"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::title_body","symbolFullyQualifiedMangleName":"_L879dc2e1b48e2ccc680947b63bd36f085eee2c1d588ad39976ae890569e56aec::anonymous_closure::title_body::0"}],"moduleText":"--[[ Generated with https://github.com/TypeScriptToLua/TypeScriptToLua ]]\nrequire(\"lualib_bundle\");\nlocal ____exports = {}\nlocal ____runApp = require(\"hydro-sdk.runtime.flutter.runApp\")\nlocal runApp = ____runApp.runApp\nlocal ____materialApp = require(\"hydro-sdk.runtime.flutter.material.materialApp\")\nlocal MaterialApp = ____materialApp.MaterialApp\nlocal ____text = require(\"hydro-sdk.runtime.flutter.widgets.text\")\nlocal Text = ____text.Text\nlocal ____scaffold = require(\"hydro-sdk.runtime.flutter.material.scaffold\")\nlocal Scaffold = ____scaffold.Scaffold\nlocal ____appBar = require(\"hydro-sdk.runtime.flutter.material.appBar\")\nlocal AppBar = ____appBar.AppBar\nlocal rx = require(\"rxjs\")\nrunApp(\n    function(title, body)\n        local subject = __TS__New(rx.BehaviorSubject, \"\")\n        return __TS__New(\n            MaterialApp,\n            {\n                title = title,\n                home = __TS__New(\n                    Scaffold,\n                    {\n                        appBar = __TS__New(\n                            AppBar,\n                            {\n                                title = __TS__New(Text, title)\n                            }\n                        ),\n                        body = __TS__New(Text, subject.value)\n                    }\n                )\n            }\n        )\n    end\n)\nreturn ____exports\n","moduleName":"step","originalFileName":"step.ts","originalFileHash":"11563c0a933f56395fdd398d7989aa0f26c6ba281338fb718312d8a83d1b081d"},"lualib_bundle":{"debugSymbols":[{"lineStart":1,"lineEnd":20,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayConcat","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr1","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayConcat::arr1_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayConcat::arr1_...::0"},{"lineStart":22,"lineEnd":33,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayEvery","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackfn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayEvery::arr_callbackfn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayEvery::arr_callbackfn::0"},{"lineStart":35,"lineEnd":47,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayFilter","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackfn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayFilter::arr_callbackfn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayFilter::arr_callbackfn::0"},{"lineStart":49,"lineEnd":57,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayForEach","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackFn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayForEach::arr_callbackFn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayForEach::arr_callbackFn::0"},{"lineStart":59,"lineEnd":70,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayFind","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","predicate"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayFind::arr_predicate","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayFind::arr_predicate::0"},{"lineStart":72,"lineEnd":84,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayFindIndex","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackFn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayFindIndex::arr_callbackFn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayFindIndex::arr_callbackFn::0"},{"lineStart":86,"lineEnd":104,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayIncludes","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","searchElement","fromIndex"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayIncludes::self_searchElement_fromIndex","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayIncludes::self_searchElement_fromIndex::0"},{"lineStart":106,"lineEnd":137,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayIndexOf","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","searchElement","fromIndex"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayIndexOf::arr_searchElement_fromIndex","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayIndexOf::arr_searchElement_fromIndex::0"},{"lineStart":139,"lineEnd":153,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayJoin","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","separator"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayJoin::self_separator","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayJoin::self_separator::0"},{"lineStart":155,"lineEnd":165,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayMap","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackfn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayMap::arr_callbackfn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayMap::arr_callbackfn::0"},{"lineStart":167,"lineEnd":173,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayPush","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayPush::arr_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayPush::arr_...::0"},{"lineStart":175,"lineEnd":191,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayReduce","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackFn","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayReduce::arr_callbackFn_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayReduce::arr_callbackFn_...::0"},{"lineStart":193,"lineEnd":209,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayReduceRight","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackFn","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayReduceRight::arr_callbackFn_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayReduceRight::arr_callbackFn_...::0"},{"lineStart":211,"lineEnd":222,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayReverse","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayReverse::arr","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayReverse::arr::0"},{"lineStart":224,"lineEnd":226,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayShift","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayShift::arr","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayShift::arr::0"},{"lineStart":228,"lineEnd":238,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayUnshift","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayUnshift::arr_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayUnshift::arr_...::0"},{"lineStart":240,"lineEnd":250,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArraySort","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","compareFn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArraySort::arr_compareFn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySort::arr_compareFn::0"},{"lineStart":244,"lineEnd":244,"columnStart":12,"columnEnd":61,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["a","b"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::a_b","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySort::arr_compareFn::0::anonymous_closure::a_b::0"},{"lineStart":252,"lineEnd":279,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArraySlice","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["list","first","last"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArraySlice::list_first_last","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySlice::list_first_last::0"},{"lineStart":281,"lineEnd":292,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArraySome","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","callbackfn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArraySome::arr_callbackfn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySome::arr_callbackfn::0"},{"lineStart":294,"lineEnd":377,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArraySplice","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["list","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArraySplice::list_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySplice::list_...::0"},{"lineStart":379,"lineEnd":389,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayToObject","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["array"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayToObject::array","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayToObject::array::0"},{"lineStart":391,"lineEnd":407,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayFlat","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["array","depth"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayFlat::array_depth","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayFlat::array_depth::0"},{"lineStart":409,"lineEnd":424,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArrayFlatMap","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["array","callback"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArrayFlatMap::array_callback","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArrayFlatMap::array_callback::0"},{"lineStart":426,"lineEnd":441,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ArraySetLength","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["arr","length"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ArraySetLength::arr_length","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ArraySetLength::arr_length::0"},{"lineStart":443,"lineEnd":448,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Class","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Class::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Class::self::0"},{"lineStart":450,"lineEnd":473,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ClassExtends","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["target","base"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ClassExtends::target_base","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ClassExtends::target_base::0"},{"lineStart":475,"lineEnd":496,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Decorate","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["decorators","target","key","desc"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Decorate::decorators_target_key_desc","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Decorate::decorators_target_key_desc::0"},{"lineStart":498,"lineEnd":521,"columnStart":0,"columnEnd":3,"symbolName":"____descriptorIndex","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"____descriptorIndex::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::____descriptorIndex::self_key::0"},{"lineStart":522,"lineEnd":538,"columnStart":0,"columnEnd":3,"symbolName":"____descriptorNewindex","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"____descriptorNewindex::self_key_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::____descriptorNewindex::self_key_value::0"},{"lineStart":539,"lineEnd":550,"columnStart":0,"columnEnd":3,"symbolName":"__TS__SetDescriptor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["metatable","prop","descriptor"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__SetDescriptor::metatable_prop_descriptor","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SetDescriptor::metatable_prop_descriptor::0"},{"lineStart":551,"lineEnd":559,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectDefineProperty","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["object","prop","descriptor"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectDefineProperty::object_prop_descriptor","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectDefineProperty::object_prop_descriptor::0"},{"lineStart":561,"lineEnd":565,"columnStart":0,"columnEnd":3,"symbolName":"__TS__New","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["target","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__New::target_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__New::target_...::0"},{"lineStart":567,"lineEnd":580,"columnStart":0,"columnEnd":3,"symbolName":"__TS__GetErrorStack","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","constructor"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__GetErrorStack::self_constructor","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__GetErrorStack::self_constructor::0"},{"lineStart":581,"lineEnd":591,"columnStart":0,"columnEnd":3,"symbolName":"__TS__WrapErrorToString","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","getDescription"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__WrapErrorToString::self_getDescription","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__WrapErrorToString::self_getDescription::0"},{"lineStart":582,"lineEnd":590,"columnStart":11,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__WrapErrorToString::self_getDescription::0::anonymous_closure::self::0"},{"lineStart":592,"lineEnd":600,"columnStart":0,"columnEnd":3,"symbolName":"__TS__InitErrorClass","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","Type","name"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__InitErrorClass::self_Type_name","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__InitErrorClass::self_Type_name::0"},{"lineStart":597,"lineEnd":597,"columnStart":21,"columnEnd":87,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["____","_self","message"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::______self_message","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__InitErrorClass::self_Type_name::0::anonymous_closure::______self_message::0"},{"lineStart":603,"lineEnd":623,"columnStart":5,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::0"},{"lineStart":606,"lineEnd":618,"columnStart":8,"columnEnd":11,"symbolName":"____.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","message"],"symbolDisambiguationIndex":0,"symbolMangleName":"____.prototype.____constructor::self_message","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::0::____.prototype.____constructor::self_message::0"},{"lineStart":619,"lineEnd":621,"columnStart":8,"columnEnd":11,"symbolName":"____.prototype.__tostring","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"____.prototype.__tostring::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::0::____.prototype.__tostring::self::0"},{"lineStart":620,"lineEnd":620,"columnStart":47,"columnEnd":124,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::0::____.prototype.__tostring::self::0::anonymous_closure::0::anonymous_closure::0"},{"lineStart":620,"lineEnd":620,"columnStart":131,"columnEnd":162,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::0::____.prototype.__tostring::self::0::anonymous_closure::0::anonymous_closure::0"},{"lineStart":629,"lineEnd":638,"columnStart":9,"columnEnd":11,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":1,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::1"},{"lineStart":633,"lineEnd":636,"columnStart":12,"columnEnd":15,"symbolName":"____.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"____.prototype.____constructor::self_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::1::____.prototype.____constructor::self_...::0"},{"lineStart":645,"lineEnd":661,"columnStart":0,"columnEnd":3,"symbolName":"__TS__FunctionBind","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["fn","thisArg","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__FunctionBind::fn_thisArg_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__FunctionBind::fn_thisArg_...::0"},{"lineStart":647,"lineEnd":660,"columnStart":11,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["____","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::_____...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__FunctionBind::fn_thisArg_...::0::anonymous_closure::_____...::0"},{"lineStart":664,"lineEnd":666,"columnStart":17,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::self::0"},{"lineStart":668,"lineEnd":670,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Symbol","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["description"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Symbol::description","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Symbol::description::0"},{"lineStart":678,"lineEnd":680,"columnStart":0,"columnEnd":3,"symbolName":"__TS__GeneratorIterator","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__GeneratorIterator::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__GeneratorIterator::self::0"},{"lineStart":681,"lineEnd":694,"columnStart":0,"columnEnd":3,"symbolName":"__TS__GeneratorNext","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__GeneratorNext::self_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__GeneratorNext::self_...::0"},{"lineStart":695,"lineEnd":709,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Generator","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["fn"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Generator::fn","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Generator::fn::0"},{"lineStart":696,"lineEnd":708,"columnStart":11,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["..."],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Generator::fn::0::anonymous_closure::...::0"},{"lineStart":701,"lineEnd":703,"columnStart":16,"columnEnd":21,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Generator::fn::0::anonymous_closure::...::0::anonymous_closure::0"},{"lineStart":711,"lineEnd":728,"columnStart":0,"columnEnd":3,"symbolName":"__TS__InstanceOf","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["obj","classTbl"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__InstanceOf::obj_classTbl","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__InstanceOf::obj_classTbl::0"},{"lineStart":730,"lineEnd":733,"columnStart":0,"columnEnd":3,"symbolName":"__TS__InstanceOfObject","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["value"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__InstanceOfObject::value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__InstanceOfObject::value::0"},{"lineStart":735,"lineEnd":745,"columnStart":0,"columnEnd":3,"symbolName":"__TS__IteratorGeneratorStep","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__IteratorGeneratorStep::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__IteratorGeneratorStep::self::0"},{"lineStart":746,"lineEnd":752,"columnStart":0,"columnEnd":3,"symbolName":"__TS__IteratorIteratorStep","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__IteratorIteratorStep::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__IteratorIteratorStep::self::0"},{"lineStart":753,"lineEnd":762,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Iterator","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["iterable"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Iterator::iterable","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Iterator::iterable::0"},{"lineStart":764,"lineEnd":907,"columnStart":7,"columnEnd":3,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":2,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2"},{"lineStart":767,"lineEnd":793,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","entries"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.____constructor::self_entries","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.____constructor::self_entries::0"},{"lineStart":794,"lineEnd":801,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.clear","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.clear::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.clear::self::0"},{"lineStart":802,"lineEnd":826,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.delete","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.delete::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.delete::self_key::0"},{"lineStart":827,"lineEnd":833,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.forEach","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","callback"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.forEach::self_callback","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.forEach::self_callback::0"},{"lineStart":834,"lineEnd":836,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.get","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.get::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.get::self_key::0"},{"lineStart":837,"lineEnd":839,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.has","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.has::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.has::self_key::0"},{"lineStart":840,"lineEnd":855,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.set","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.set::self_key_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.set::self_key_value::0"},{"lineStart":856,"lineEnd":858,"columnStart":37,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::anonymous_closure::self::0"},{"lineStart":856,"lineEnd":858,"columnStart":37,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::anonymous_closure::self::0"},{"lineStart":859,"lineEnd":874,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.entries","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.entries::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.entries::self::0"},{"lineStart":868,"lineEnd":872,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.entries::self::0::anonymous_closure::self::0"},{"lineStart":875,"lineEnd":888,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.keys","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.keys::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.keys::self::0"},{"lineStart":882,"lineEnd":886,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.keys::self::0::anonymous_closure::self::0"},{"lineStart":889,"lineEnd":904,"columnStart":4,"columnEnd":7,"symbolName":"Map.prototype.values","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Map.prototype.values::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.values::self::0"},{"lineStart":898,"lineEnd":902,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::2::Map.prototype.values::self::0::anonymous_closure::self::0"},{"lineStart":911,"lineEnd":936,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Number","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["value"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Number::value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Number::value::0"},{"lineStart":938,"lineEnd":940,"columnStart":0,"columnEnd":3,"symbolName":"__TS__NumberIsFinite","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["value"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__NumberIsFinite::value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__NumberIsFinite::value::0"},{"lineStart":942,"lineEnd":944,"columnStart":0,"columnEnd":3,"symbolName":"__TS__NumberIsNaN","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["value"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__NumberIsNaN::value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__NumberIsNaN::value::0"},{"lineStart":947,"lineEnd":994,"columnStart":0,"columnEnd":3,"symbolName":"__TS__NumberToString","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","radix"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__NumberToString::self_radix","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__NumberToString::self_radix::0"},{"lineStart":996,"lineEnd":1007,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectAssign","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["to","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectAssign::to_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectAssign::to_...::0"},{"lineStart":1009,"lineEnd":1015,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectEntries","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["obj"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectEntries::obj","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectEntries::obj::0"},{"lineStart":1017,"lineEnd":1036,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectFromEntries","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["entries"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectFromEntries::entries","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectFromEntries::entries::0"},{"lineStart":1038,"lineEnd":1044,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectKeys","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["obj"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectKeys::obj","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectKeys::obj::0"},{"lineStart":1046,"lineEnd":1054,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectRest","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["target","usedProperties"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectRest::target_usedProperties","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectRest::target_usedProperties::0"},{"lineStart":1056,"lineEnd":1062,"columnStart":0,"columnEnd":3,"symbolName":"__TS__ObjectValues","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["obj"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__ObjectValues::obj","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__ObjectValues::obj::0"},{"lineStart":1064,"lineEnd":1195,"columnStart":7,"columnEnd":3,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":3,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3"},{"lineStart":1067,"lineEnd":1091,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","values"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.____constructor::self_values","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.____constructor::self_values::0"},{"lineStart":1092,"lineEnd":1106,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.add","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.add::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.add::self_value::0"},{"lineStart":1107,"lineEnd":1113,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.clear","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.clear::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.clear::self::0"},{"lineStart":1114,"lineEnd":1137,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.delete","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.delete::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.delete::self_value::0"},{"lineStart":1138,"lineEnd":1144,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.forEach","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","callback"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.forEach::self_callback","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.forEach::self_callback::0"},{"lineStart":1145,"lineEnd":1147,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.has","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.has::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.has::self_value::0"},{"lineStart":1148,"lineEnd":1150,"columnStart":37,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::anonymous_closure::self::0"},{"lineStart":1148,"lineEnd":1150,"columnStart":37,"columnEnd":7,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::anonymous_closure::self::0"},{"lineStart":1151,"lineEnd":1164,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.entries","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.entries::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.entries::self::0"},{"lineStart":1158,"lineEnd":1162,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.entries::self::0::anonymous_closure::self::0"},{"lineStart":1165,"lineEnd":1178,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.keys","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.keys::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.keys::self::0"},{"lineStart":1172,"lineEnd":1176,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.keys::self::0::anonymous_closure::self::0"},{"lineStart":1179,"lineEnd":1192,"columnStart":4,"columnEnd":7,"symbolName":"Set.prototype.values","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"Set.prototype.values::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.values::self::0"},{"lineStart":1186,"lineEnd":1190,"columnStart":19,"columnEnd":15,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::3::Set.prototype.values::self::0::anonymous_closure::self::0"},{"lineStart":1197,"lineEnd":1241,"columnStart":11,"columnEnd":3,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":4,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4"},{"lineStart":1200,"lineEnd":1223,"columnStart":4,"columnEnd":7,"symbolName":"WeakMap.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","entries"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakMap.prototype.____constructor::self_entries","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4::WeakMap.prototype.____constructor::self_entries::0"},{"lineStart":1224,"lineEnd":1228,"columnStart":4,"columnEnd":7,"symbolName":"WeakMap.prototype.delete","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakMap.prototype.delete::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4::WeakMap.prototype.delete::self_key::0"},{"lineStart":1229,"lineEnd":1231,"columnStart":4,"columnEnd":7,"symbolName":"WeakMap.prototype.get","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakMap.prototype.get::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4::WeakMap.prototype.get::self_key::0"},{"lineStart":1232,"lineEnd":1234,"columnStart":4,"columnEnd":7,"symbolName":"WeakMap.prototype.has","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakMap.prototype.has::self_key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4::WeakMap.prototype.has::self_key::0"},{"lineStart":1235,"lineEnd":1238,"columnStart":4,"columnEnd":7,"symbolName":"WeakMap.prototype.set","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","key","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakMap.prototype.set::self_key_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::4::WeakMap.prototype.set::self_key_value::0"},{"lineStart":1243,"lineEnd":1283,"columnStart":11,"columnEnd":3,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":[],"symbolDisambiguationIndex":5,"symbolMangleName":"anonymous_closure","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::5"},{"lineStart":1246,"lineEnd":1268,"columnStart":4,"columnEnd":7,"symbolName":"WeakSet.prototype.____constructor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","values"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakSet.prototype.____constructor::self_values","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::5::WeakSet.prototype.____constructor::self_values::0"},{"lineStart":1269,"lineEnd":1272,"columnStart":4,"columnEnd":7,"symbolName":"WeakSet.prototype.add","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakSet.prototype.add::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::5::WeakSet.prototype.add::self_value::0"},{"lineStart":1273,"lineEnd":1277,"columnStart":4,"columnEnd":7,"symbolName":"WeakSet.prototype.delete","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakSet.prototype.delete::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::5::WeakSet.prototype.delete::self_value::0"},{"lineStart":1278,"lineEnd":1280,"columnStart":4,"columnEnd":7,"symbolName":"WeakSet.prototype.has","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","value"],"symbolDisambiguationIndex":0,"symbolMangleName":"WeakSet.prototype.has::self_value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::anonymous_closure::5::WeakSet.prototype.has::self_value::0"},{"lineStart":1285,"lineEnd":1314,"columnStart":0,"columnEnd":3,"symbolName":"__TS__SourceMapTraceBack","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["fileName","sourceMap"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__SourceMapTraceBack::fileName_sourceMap","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SourceMapTraceBack::fileName_sourceMap::0"},{"lineStart":1290,"lineEnd":1312,"columnStart":26,"columnEnd":11,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["thread","message","level"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::thread_message_level","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SourceMapTraceBack::fileName_sourceMap::0::anonymous_closure::thread_message_level::0"},{"lineStart":1290,"lineEnd":1312,"columnStart":26,"columnEnd":11,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["thread","message","level"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::thread_message_level","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SourceMapTraceBack::fileName_sourceMap::0::anonymous_closure::thread_message_level::0"},{"lineStart":1303,"lineEnd":1309,"columnStart":16,"columnEnd":19,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["file","line"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::file_line","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SourceMapTraceBack::fileName_sourceMap::0::anonymous_closure::thread_message_level::0::anonymous_closure::thread_message_level::0::anonymous_closure::file_line::0"},{"lineStart":1303,"lineEnd":1309,"columnStart":16,"columnEnd":19,"symbolName":"anonymous closure","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["file","line"],"symbolDisambiguationIndex":0,"symbolMangleName":"anonymous_closure::file_line","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SourceMapTraceBack::fileName_sourceMap::0::anonymous_closure::thread_message_level::0::anonymous_closure::thread_message_level::0::anonymous_closure::file_line::0"},{"lineStart":1316,"lineEnd":1332,"columnStart":0,"columnEnd":3,"symbolName":"__TS__Spread","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["iterable"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__Spread::iterable","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__Spread::iterable::0"},{"lineStart":1334,"lineEnd":1341,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringConcat","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["str1","..."],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringConcat::str1_...","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringConcat::str1_...::0"},{"lineStart":1343,"lineEnd":1348,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringEndsWith","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","searchString","endPosition"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringEndsWith::self_searchString_endPosition","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringEndsWith::self_searchString_endPosition::0"},{"lineStart":1350,"lineEnd":1379,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringPadEnd","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","maxLength","fillString"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringPadEnd::self_maxLength_fillString","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringPadEnd::self_maxLength_fillString::0"},{"lineStart":1381,"lineEnd":1410,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringPadStart","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","maxLength","fillString"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringPadStart::self_maxLength_fillString","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringPadStart::self_maxLength_fillString::0"},{"lineStart":1412,"lineEnd":1427,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringReplace","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["source","searchValue","replaceValue"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringReplace::source_searchValue_replaceValue","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringReplace::source_searchValue_replaceValue::0"},{"lineStart":1429,"lineEnd":1459,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringSplit","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["source","separator","limit"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringSplit::source_separator_limit","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringSplit::source_separator_limit::0"},{"lineStart":1461,"lineEnd":1466,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringStartsWith","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self","searchString","position"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringStartsWith::self_searchString_position","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringStartsWith::self_searchString_position::0"},{"lineStart":1468,"lineEnd":1471,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringTrim","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringTrim::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringTrim::self::0"},{"lineStart":1473,"lineEnd":1476,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringTrimEnd","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringTrimEnd::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringTrimEnd::self::0"},{"lineStart":1478,"lineEnd":1481,"columnStart":0,"columnEnd":3,"symbolName":"__TS__StringTrimStart","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["self"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__StringTrimStart::self","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__StringTrimStart::self::0"},{"lineStart":1484,"lineEnd":1489,"columnStart":0,"columnEnd":3,"symbolName":"__TS__SymbolRegistryFor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["key"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__SymbolRegistryFor::key","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SymbolRegistryFor::key::0"},{"lineStart":1490,"lineEnd":1496,"columnStart":0,"columnEnd":3,"symbolName":"__TS__SymbolRegistryKeyFor","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["sym"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__SymbolRegistryKeyFor::sym","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__SymbolRegistryKeyFor::sym::0"},{"lineStart":1498,"lineEnd":1507,"columnStart":0,"columnEnd":3,"symbolName":"__TS__TypeOf","moduleName":"","fileName":"lualib_bundle","originalFileName":"lualib_bundle","originalLineStart":0,"originalColumnStart":0,"parameterNames":["value"],"symbolDisambiguationIndex":0,"symbolMangleName":"__TS__TypeOf::value","symbolFullyQualifiedMangleName":"_Llualib_bundlec75fa38bebc9d92ee4b1b326ca2f7e7b514d4f1f99089a98b815bd95453d28ea::__TS__TypeOf::value::0"}],"moduleText":"function __TS__ArrayConcat(arr1, ...)\n    local args = {...}\n    local out = {}\n    for ____, val in ipairs(arr1) do\n        out[#out + 1] = val\n    end\n    for ____, arg in ipairs(args) do\n        if pcall(\n            function() return #arg end\n        ) and (type(arg) ~= \"string\") then\n            local argAsArray = arg\n            for ____, val in ipairs(argAsArray) do\n                out[#out + 1] = val\n            end\n        else\n            out[#out + 1] = arg\n        end\n    end\n    return out\nend\n\nfunction __TS__ArrayEvery(arr, callbackfn)\n    do\n        local i = 0\n        while i < #arr do\n            if not callbackfn(_G, arr[i + 1], i, arr) then\n                return false\n            end\n            i = i + 1\n        end\n    end\n    return true\nend\n\nfunction __TS__ArrayFilter(arr, callbackfn)\n    local result = {}\n    do\n        local i = 0\n        while i < #arr do\n            if callbackfn(_G, arr[i + 1], i, arr) then\n                result[#result + 1] = arr[i + 1]\n            end\n            i = i + 1\n        end\n    end\n    return result\nend\n\nfunction __TS__ArrayForEach(arr, callbackFn)\n    do\n        local i = 0\n        while i < #arr do\n            callbackFn(_G, arr[i + 1], i, arr)\n            i = i + 1\n        end\n    end\nend\n\nfunction __TS__ArrayFind(arr, predicate)\n    local len = #arr\n    local k = 0\n    while k < len do\n        local elem = arr[k + 1]\n        if predicate(_G, elem, k, arr) then\n            return elem\n        end\n        k = k + 1\n    end\n    return nil\nend\n\nfunction __TS__ArrayFindIndex(arr, callbackFn)\n    do\n        local i = 0\n        local len = #arr\n        while i < len do\n            if callbackFn(_G, arr[i + 1], i, arr) then\n                return i\n            end\n            i = i + 1\n        end\n    end\n    return -1\nend\n\nfunction __TS__ArrayIncludes(self, searchElement, fromIndex)\n    if fromIndex == nil then\n        fromIndex = 0\n    end\n    local len = #self\n    local k = fromIndex\n    if fromIndex < 0 then\n        k = len + fromIndex\n    end\n    if k < 0 then\n        k = 0\n    end\n    for i = k, len do\n        if self[i + 1] == searchElement then\n            return true\n        end\n    end\n    return false\nend\n\nfunction __TS__ArrayIndexOf(arr, searchElement, fromIndex)\n    local len = #arr\n    if len == 0 then\n        return -1\n    end\n    local n = 0\n    if fromIndex then\n        n = fromIndex\n    end\n    if n >= len then\n        return -1\n    end\n    local k\n    if n >= 0 then\n        k = n\n    else\n        k = len + n\n        if k < 0 then\n            k = 0\n        end\n    end\n    do\n        local i = k\n        while i < len do\n            if arr[i + 1] == searchElement then\n                return i\n            end\n            i = i + 1\n        end\n    end\n    return -1\nend\n\nfunction __TS__ArrayJoin(self, separator)\n    if separator == nil then\n        separator = \",\"\n    end\n    local result = \"\"\n    for index, value in ipairs(self) do\n        if index > 1 then\n            result = tostring(result) .. tostring(separator)\n        end\n        result = tostring(result) .. tostring(\n            tostring(value)\n        )\n    end\n    return result\nend\n\nfunction __TS__ArrayMap(arr, callbackfn)\n    local newArray = {}\n    do\n        local i = 0\n        while i < #arr do\n            newArray[i + 1] = callbackfn(_G, arr[i + 1], i, arr)\n            i = i + 1\n        end\n    end\n    return newArray\nend\n\nfunction __TS__ArrayPush(arr, ...)\n    local items = {...}\n    for ____, item in ipairs(items) do\n        arr[#arr + 1] = item\n    end\n    return #arr\nend\n\nfunction __TS__ArrayReduce(arr, callbackFn, ...)\n    local len = #arr\n    local k = 0\n    local accumulator = nil\n    if select(\"#\", ...) ~= 0 then\n        accumulator = select(1, ...)\n    elseif len > 0 then\n        accumulator = arr[1]\n        k = 1\n    else\n        error(\"Reduce of empty array with no initial value\", 0)\n    end\n    for i = k, len - 1 do\n        accumulator = callbackFn(_G, accumulator, arr[i + 1], i, arr)\n    end\n    return accumulator\nend\n\nfunction __TS__ArrayReduceRight(arr, callbackFn, ...)\n    local len = #arr\n    local k = len - 1\n    local accumulator = nil\n    if select(\"#\", ...) ~= 0 then\n        accumulator = select(1, ...)\n    elseif len > 0 then\n        accumulator = arr[k + 1]\n        k = k - 1\n    else\n        error(\"Reduce of empty array with no initial value\", 0)\n    end\n    for i = k, 0, -1 do\n        accumulator = callbackFn(_G, accumulator, arr[i + 1], i, arr)\n    end\n    return accumulator\nend\n\nfunction __TS__ArrayReverse(arr)\n    local i = 0\n    local j = #arr - 1\n    while i < j do\n        local temp = arr[j + 1]\n        arr[j + 1] = arr[i + 1]\n        arr[i + 1] = temp\n        i = i + 1\n        j = j - 1\n    end\n    return arr\nend\n\nfunction __TS__ArrayShift(arr)\n    return table.remove(arr, 1)\nend\n\nfunction __TS__ArrayUnshift(arr, ...)\n    local items = {...}\n    do\n        local i = #items - 1\n        while i >= 0 do\n            table.insert(arr, 1, items[i + 1])\n            i = i - 1\n        end\n    end\n    return #arr\nend\n\nfunction __TS__ArraySort(arr, compareFn)\n    if compareFn ~= nil then\n        table.sort(\n            arr,\n            function(a, b) return compareFn(_G, a, b) < 0 end\n        )\n    else\n        table.sort(arr)\n    end\n    return arr\nend\n\nfunction __TS__ArraySlice(list, first, last)\n    local len = #list\n    local relativeStart = first or 0\n    local k\n    if relativeStart < 0 then\n        k = math.max(len + relativeStart, 0)\n    else\n        k = math.min(relativeStart, len)\n    end\n    local relativeEnd = last\n    if last == nil then\n        relativeEnd = len\n    end\n    local final\n    if relativeEnd < 0 then\n        final = math.max(len + relativeEnd, 0)\n    else\n        final = math.min(relativeEnd, len)\n    end\n    local out = {}\n    local n = 0\n    while k < final do\n        out[n + 1] = list[k + 1]\n        k = k + 1\n        n = n + 1\n    end\n    return out\nend\n\nfunction __TS__ArraySome(arr, callbackfn)\n    do\n        local i = 0\n        while i < #arr do\n            if callbackfn(_G, arr[i + 1], i, arr) then\n                return true\n            end\n            i = i + 1\n        end\n    end\n    return false\nend\n\nfunction __TS__ArraySplice(list, ...)\n    local len = #list\n    local actualArgumentCount = select(\"#\", ...)\n    local start = select(1, ...)\n    local deleteCount = select(2, ...)\n    local actualStart\n    if start < 0 then\n        actualStart = math.max(len + start, 0)\n    else\n        actualStart = math.min(start, len)\n    end\n    local itemCount = math.max(actualArgumentCount - 2, 0)\n    local actualDeleteCount\n    if actualArgumentCount == 0 then\n        actualDeleteCount = 0\n    elseif actualArgumentCount == 1 then\n        actualDeleteCount = len - actualStart\n    else\n        actualDeleteCount = math.min(\n            math.max(deleteCount or 0, 0),\n            len - actualStart\n        )\n    end\n    local out = {}\n    do\n        local k = 0\n        while k < actualDeleteCount do\n            local from = actualStart + k\n            if list[from + 1] then\n                out[k + 1] = list[from + 1]\n            end\n            k = k + 1\n        end\n    end\n    if itemCount < actualDeleteCount then\n        do\n            local k = actualStart\n            while k < (len - actualDeleteCount) do\n                local from = k + actualDeleteCount\n                local to = k + itemCount\n                if list[from + 1] then\n                    list[to + 1] = list[from + 1]\n                else\n                    list[to + 1] = nil\n                end\n                k = k + 1\n            end\n        end\n        do\n            local k = len\n            while k > ((len - actualDeleteCount) + itemCount) do\n                list[k] = nil\n                k = k - 1\n            end\n        end\n    elseif itemCount > actualDeleteCount then\n        do\n            local k = len - actualDeleteCount\n            while k > actualStart do\n                local from = (k + actualDeleteCount) - 1\n                local to = (k + itemCount) - 1\n                if list[from + 1] then\n                    list[to + 1] = list[from + 1]\n                else\n                    list[to + 1] = nil\n                end\n                k = k - 1\n            end\n        end\n    end\n    local j = actualStart\n    for i = 3, actualArgumentCount do\n        list[j + 1] = select(i, ...)\n        j = j + 1\n    end\n    do\n        local k = #list - 1\n        while k >= ((len - actualDeleteCount) + itemCount) do\n            list[k + 1] = nil\n            k = k - 1\n        end\n    end\n    return out\nend\n\nfunction __TS__ArrayToObject(array)\n    local object = {}\n    do\n        local i = 0\n        while i < #array do\n            object[i] = array[i + 1]\n            i = i + 1\n        end\n    end\n    return object\nend\n\nfunction __TS__ArrayFlat(array, depth)\n    if depth == nil then\n        depth = 1\n    end\n    local result = {}\n    for ____, value in ipairs(array) do\n        if ((depth > 0) and (type(value) == \"table\")) and ((value[1] ~= nil) or (next(value, nil) == nil)) then\n            result = __TS__ArrayConcat(\n                result,\n                __TS__ArrayFlat(value, depth - 1)\n            )\n        else\n            result[#result + 1] = value\n        end\n    end\n    return result\nend\n\nfunction __TS__ArrayFlatMap(array, callback)\n    local result = {}\n    do\n        local i = 0\n        while i < #array do\n            local value = callback(_G, array[i + 1], i, array)\n            if (type(value) == \"table\") and ((value[1] ~= nil) or (next(value, nil) == nil)) then\n                result = __TS__ArrayConcat(result, value)\n            else\n                result[#result + 1] = value\n            end\n            i = i + 1\n        end\n    end\n    return result\nend\n\nfunction __TS__ArraySetLength(arr, length)\n    if (((length < 0) or (length ~= length)) or (length == math.huge)) or (math.floor(length) ~= length) then\n        error(\n            \"invalid array length: \" .. tostring(length),\n            0\n        )\n    end\n    do\n        local i = #arr - 1\n        while i >= length do\n            arr[i + 1] = nil\n            i = i - 1\n        end\n    end\n    return length\nend\n\nfunction __TS__Class(self)\n    local c = {prototype = {}}\n    c.prototype.__index = c.prototype\n    c.prototype.constructor = c\n    return c\nend\n\nfunction __TS__ClassExtends(target, base)\n    target.____super = base\n    local staticMetatable = setmetatable({__index = base}, base)\n    setmetatable(target, staticMetatable)\n    local baseMetatable = getmetatable(base)\n    if baseMetatable then\n        if type(baseMetatable.__index) == \"function\" then\n            staticMetatable.__index = baseMetatable.__index\n        end\n        if type(baseMetatable.__newindex) == \"function\" then\n            staticMetatable.__newindex = baseMetatable.__newindex\n        end\n    end\n    setmetatable(target.prototype, base.prototype)\n    if type(base.prototype.__index) == \"function\" then\n        target.prototype.__index = base.prototype.__index\n    end\n    if type(base.prototype.__newindex) == \"function\" then\n        target.prototype.__newindex = base.prototype.__newindex\n    end\n    if type(base.prototype.__tostring) == \"function\" then\n        target.prototype.__tostring = base.prototype.__tostring\n    end\nend\n\nfunction __TS__Decorate(decorators, target, key, desc)\n    local result = target\n    do\n        local i = #decorators\n        while i >= 0 do\n            local decorator = decorators[i + 1]\n            if decorator then\n                local oldResult = result\n                if key == nil then\n                    result = decorator(_G, result)\n                elseif desc ~= nil then\n                    result = decorator(_G, target, key, result)\n                else\n                    result = decorator(_G, target, key)\n                end\n                result = result or oldResult\n            end\n            i = i - 1\n        end\n    end\n    return result\nend\n\nfunction ____descriptorIndex(self, key)\n    local value = rawget(self, key)\n    if value ~= nil then\n        return value\n    end\n    local metatable = getmetatable(self)\n    while metatable do\n        local rawResult = rawget(metatable, key)\n        if rawResult ~= nil then\n            return rawResult\n        end\n        local descriptors = rawget(metatable, \"_descriptors\")\n        if descriptors then\n            local descriptor = descriptors[key]\n            if descriptor then\n                if descriptor.get then\n                    return descriptor.get(self)\n                end\n                return\n            end\n        end\n        metatable = getmetatable(metatable)\n    end\nend\nfunction ____descriptorNewindex(self, key, value)\n    local metatable = getmetatable(self)\n    while metatable do\n        local descriptors = rawget(metatable, \"_descriptors\")\n        if descriptors then\n            local descriptor = descriptors[key]\n            if descriptor then\n                if descriptor.set then\n                    descriptor.set(self, value)\n                end\n                return\n            end\n        end\n        metatable = getmetatable(metatable)\n    end\n    rawset(self, key, value)\nend\nfunction __TS__SetDescriptor(metatable, prop, descriptor)\n    if not rawget(metatable, \"_descriptors\") then\n        metatable._descriptors = {}\n    end\n    metatable._descriptors[prop] = descriptor\n    if descriptor.get then\n        metatable.__index = ____descriptorIndex\n    end\n    if descriptor.set then\n        metatable.__newindex = ____descriptorNewindex\n    end\nend\nfunction __TS__ObjectDefineProperty(object, prop, descriptor)\n    local metatable = getmetatable(object)\n    if not metatable then\n        metatable = {}\n        setmetatable(object, metatable)\n    end\n    __TS__SetDescriptor(metatable, prop, descriptor)\n    return object\nend\n\nfunction __TS__New(target, ...)\n    local instance = setmetatable({}, target.prototype)\n    instance:____constructor(...)\n    return instance\nend\n\nfunction __TS__GetErrorStack(self, constructor)\n    local level = 1\n    while true do\n        local info = debug.getinfo(level, \"f\")\n        level = level + 1\n        if not info then\n            level = 1\n            break\n        elseif info.func == constructor then\n            break\n        end\n    end\n    return debug.traceback(nil, level)\nend\nfunction __TS__WrapErrorToString(self, getDescription)\n    return function(self)\n        local description = getDescription(self)\n        local caller = debug.getinfo(3, \"f\")\n        if (_VERSION == \"Lua 5.1\") or (caller and (caller.func ~= error)) then\n            return description\n        else\n            return (tostring(description) .. \"\\n\") .. tostring(self.stack)\n        end\n    end\nend\nfunction __TS__InitErrorClass(self, Type, name)\n    Type.name = name\n    return setmetatable(\n        Type,\n        {\n            __call = function(____, _self, message) return __TS__New(Type, message) end\n        }\n    )\nend\nError = __TS__InitErrorClass(\n    _G,\n    (function()\n        local ____ = __TS__Class()\n        ____.name = \"\"\n        function ____.prototype.____constructor(self, message)\n            if message == nil then\n                message = \"\"\n            end\n            self.message = message\n            self.name = \"Error\"\n            self.stack = __TS__GetErrorStack(_G, self.constructor.new)\n            local metatable = getmetatable(self)\n            if not metatable.__errorToStringPatched then\n                metatable.__errorToStringPatched = true\n                metatable.__tostring = __TS__WrapErrorToString(_G, metatable.__tostring)\n            end\n        end\n        function ____.prototype.__tostring(self)\n            return (((self.message ~= \"\") and (function() return (tostring(self.name) .. \": \") .. tostring(self.message) end)) or (function() return self.name end))()\n        end\n        return ____\n    end)(),\n    \"Error\"\n)\nfor ____, errorName in ipairs({\"RangeError\", \"ReferenceError\", \"SyntaxError\", \"TypeError\", \"URIError\"}) do\n    _G[errorName] = __TS__InitErrorClass(\n        _G,\n        (function()\n            local ____ = __TS__Class()\n            ____.name = ____.name\n            __TS__ClassExtends(____, Error)\n            function ____.prototype.____constructor(self, ...)\n                Error.prototype.____constructor(self, ...)\n                self.name = errorName\n            end\n            return ____\n        end)(),\n        errorName\n    )\nend\n\n__TS__Unpack = table.unpack or unpack\n\nfunction __TS__FunctionBind(fn, thisArg, ...)\n    local boundArgs = {...}\n    return function(____, ...)\n        local args = {...}\n        do\n            local i = 0\n            while i < #boundArgs do\n                table.insert(args, i + 1, boundArgs[i + 1])\n                i = i + 1\n            end\n        end\n        return fn(\n            thisArg,\n            __TS__Unpack(args)\n        )\n    end\nend\n\n____symbolMetatable = {\n    __tostring = function(self)\n        return (\"Symbol(\" .. tostring(self.description or \"\")) .. \")\"\n    end\n}\nfunction __TS__Symbol(description)\n    return setmetatable({description = description}, ____symbolMetatable)\nend\nSymbol = {\n    iterator = __TS__Symbol(\"Symbol.iterator\"),\n    hasInstance = __TS__Symbol(\"Symbol.hasInstance\"),\n    species = __TS__Symbol(\"Symbol.species\"),\n    toStringTag = __TS__Symbol(\"Symbol.toStringTag\")\n}\n\nfunction __TS__GeneratorIterator(self)\n    return self\nend\nfunction __TS__GeneratorNext(self, ...)\n    local co = self.____coroutine\n    if coroutine.status(co) == \"dead\" then\n        return {done = true}\n    end\n    local status, value = coroutine.resume(co, ...)\n    if not status then\n        error(value, 0)\n    end\n    return {\n        value = value,\n        done = coroutine.status(co) == \"dead\"\n    }\nend\nfunction __TS__Generator(fn)\n    return function(...)\n        local args = {...}\n        local argsLength = select(\"#\", ...)\n        return {\n            ____coroutine = coroutine.create(\n                function() return fn(\n                    (unpack or table.unpack)(args, 1, argsLength)\n                ) end\n            ),\n            [Symbol.iterator] = __TS__GeneratorIterator,\n            next = __TS__GeneratorNext\n        }\n    end\nend\n\nfunction __TS__InstanceOf(obj, classTbl)\n    if type(classTbl) ~= \"table\" then\n        error(\"Right-hand side of 'instanceof' is not an object\", 0)\n    end\n    if classTbl[Symbol.hasInstance] ~= nil then\n        return not (not classTbl[Symbol.hasInstance](classTbl, obj))\n    end\n    if type(obj) == \"table\" then\n        local luaClass = obj.constructor\n        while luaClass ~= nil do\n            if luaClass == classTbl then\n                return true\n            end\n            luaClass = luaClass.____super\n        end\n    end\n    return false\nend\n\nfunction __TS__InstanceOfObject(value)\n    local valueType = type(value)\n    return (valueType == \"table\") or (valueType == \"function\")\nend\n\nfunction __TS__IteratorGeneratorStep(self)\n    local co = self.____coroutine\n    local status, value = coroutine.resume(co)\n    if not status then\n        error(value, 0)\n    end\n    if coroutine.status(co) == \"dead\" then\n        return\n    end\n    return true, value\nend\nfunction __TS__IteratorIteratorStep(self)\n    local result = self:next()\n    if result.done then\n        return\n    end\n    return true, result.value\nend\nfunction __TS__Iterator(iterable)\n    if iterable.____coroutine ~= nil then\n        return __TS__IteratorGeneratorStep, iterable\n    elseif iterable[Symbol.iterator] then\n        local iterator = iterable[Symbol.iterator](iterable)\n        return __TS__IteratorIteratorStep, iterator\n    else\n        return ipairs(iterable)\n    end\nend\n\nMap = (function()\n    local Map = __TS__Class()\n    Map.name = \"Map\"\n    function Map.prototype.____constructor(self, entries)\n        self[Symbol.toStringTag] = \"Map\"\n        self.items = {}\n        self.size = 0\n        self.nextKey = {}\n        self.previousKey = {}\n        if entries == nil then\n            return\n        end\n        local iterable = entries\n        if iterable[Symbol.iterator] then\n            local iterator = iterable[Symbol.iterator](iterable)\n            while true do\n                local result = iterator:next()\n                if result.done then\n                    break\n                end\n                local value = result.value\n                self:set(value[1], value[2])\n            end\n        else\n            local array = entries\n            for ____, kvp in ipairs(array) do\n                self:set(kvp[1], kvp[2])\n            end\n        end\n    end\n    function Map.prototype.clear(self)\n        self.items = {}\n        self.nextKey = {}\n        self.previousKey = {}\n        self.firstKey = nil\n        self.lastKey = nil\n        self.size = 0\n    end\n    function Map.prototype.delete(self, key)\n        local contains = self:has(key)\n        if contains then\n            self.size = self.size - 1\n            local next = self.nextKey[key]\n            local previous = self.previousKey[key]\n            if next and previous then\n                self.nextKey[previous] = next\n                self.previousKey[next] = previous\n            elseif next then\n                self.firstKey = next\n                self.previousKey[next] = nil\n            elseif previous then\n                self.lastKey = previous\n                self.nextKey[previous] = nil\n            else\n                self.firstKey = nil\n                self.lastKey = nil\n            end\n            self.nextKey[key] = nil\n            self.previousKey[key] = nil\n        end\n        self.items[key] = nil\n        return contains\n    end\n    function Map.prototype.forEach(self, callback)\n        for ____, key in __TS__Iterator(\n            self:keys()\n        ) do\n            callback(_G, self.items[key], key, self)\n        end\n    end\n    function Map.prototype.get(self, key)\n        return self.items[key]\n    end\n    function Map.prototype.has(self, key)\n        return (self.nextKey[key] ~= nil) or (self.lastKey == key)\n    end\n    function Map.prototype.set(self, key, value)\n        local isNewValue = not self:has(key)\n        if isNewValue then\n            self.size = self.size + 1\n        end\n        self.items[key] = value\n        if self.firstKey == nil then\n            self.firstKey = key\n            self.lastKey = key\n        elseif isNewValue then\n            self.nextKey[self.lastKey] = key\n            self.previousKey[key] = self.lastKey\n            self.lastKey = key\n        end\n        return self\n    end\n    Map.prototype[Symbol.iterator] = function(self)\n        return self:entries()\n    end\n    function Map.prototype.entries(self)\n        local ____ = self\n        local items = ____.items\n        local nextKey = ____.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = {key, items[key]}}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    function Map.prototype.keys(self)\n        local nextKey = self.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = key}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    function Map.prototype.values(self)\n        local ____ = self\n        local items = ____.items\n        local nextKey = ____.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = items[key]}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    Map[Symbol.species] = Map\n    return Map\nend)()\n\n__TS__MathAtan2 = math.atan2 or math.atan\n\nfunction __TS__Number(value)\n    local valueType = type(value)\n    if valueType == \"number\" then\n        return value\n    elseif valueType == \"string\" then\n        local numberValue = tonumber(value)\n        if numberValue then\n            return numberValue\n        end\n        if value == \"Infinity\" then\n            return math.huge\n        end\n        if value == \"-Infinity\" then\n            return -math.huge\n        end\n        local stringWithoutSpaces = string.gsub(value, \"%s\", \"\")\n        if stringWithoutSpaces == \"\" then\n            return 0\n        end\n        return 0 / 0\n    elseif valueType == \"boolean\" then\n        return (value and 1) or 0\n    else\n        return 0 / 0\n    end\nend\n\nfunction __TS__NumberIsFinite(value)\n    return (((type(value) == \"number\") and (value == value)) and (value ~= math.huge)) and (value ~= -math.huge)\nend\n\nfunction __TS__NumberIsNaN(value)\n    return value ~= value\nend\n\n____radixChars = \"0123456789abcdefghijklmnopqrstuvwxyz\"\nfunction __TS__NumberToString(self, radix)\n    if ((((radix == nil) or (radix == 10)) or (self == math.huge)) or (self == -math.huge)) or (self ~= self) then\n        return tostring(self)\n    end\n    radix = math.floor(radix)\n    if (radix < 2) or (radix > 36) then\n        error(\"toString() radix argument must be between 2 and 36\", 0)\n    end\n    local integer, fraction = math.modf(\n        math.abs(self)\n    )\n    local result = \"\"\n    if radix == 8 then\n        result = string.format(\"%o\", integer)\n    elseif radix == 16 then\n        result = string.format(\"%x\", integer)\n    else\n        repeat\n            do\n                result = tostring(\n                    (function(____index)\n                        return string.sub(____radixChars, ____index, ____index)\n                    end)((integer % radix) + 1)\n                ) .. tostring(result)\n                integer = math.floor(integer / radix)\n            end\n        until not (integer ~= 0)\n    end\n    if fraction ~= 0 then\n        result = tostring(result) .. \".\"\n        local delta = 1e-16\n        repeat\n            do\n                fraction = fraction * radix\n                delta = delta * radix\n                local digit = math.floor(fraction)\n                result = tostring(result) .. tostring(\n                    string.sub(____radixChars, digit + 1, digit + 1)\n                )\n                fraction = fraction - digit\n            end\n        until not (fraction >= delta)\n    end\n    if self < 0 then\n        result = \"-\" .. tostring(result)\n    end\n    return result\nend\n\nfunction __TS__ObjectAssign(to, ...)\n    local sources = {...}\n    if to == nil then\n        return to\n    end\n    for ____, source in ipairs(sources) do\n        for key in pairs(source) do\n            to[key] = source[key]\n        end\n    end\n    return to\nend\n\nfunction __TS__ObjectEntries(obj)\n    local result = {}\n    for key in pairs(obj) do\n        result[#result + 1] = {key, obj[key]}\n    end\n    return result\nend\n\nfunction __TS__ObjectFromEntries(entries)\n    local obj = {}\n    local iterable = entries\n    if iterable[Symbol.iterator] then\n        local iterator = iterable[Symbol.iterator](iterable)\n        while true do\n            local result = iterator:next()\n            if result.done then\n                break\n            end\n            local value = result.value\n            obj[value[1]] = value[2]\n        end\n    else\n        for ____, entry in ipairs(entries) do\n            obj[entry[1]] = entry[2]\n        end\n    end\n    return obj\nend\n\nfunction __TS__ObjectKeys(obj)\n    local result = {}\n    for key in pairs(obj) do\n        result[#result + 1] = key\n    end\n    return result\nend\n\nfunction __TS__ObjectRest(target, usedProperties)\n    local result = {}\n    for property in pairs(target) do\n        if not usedProperties[property] then\n            result[property] = target[property]\n        end\n    end\n    return result\nend\n\nfunction __TS__ObjectValues(obj)\n    local result = {}\n    for key in pairs(obj) do\n        result[#result + 1] = obj[key]\n    end\n    return result\nend\n\nSet = (function()\n    local Set = __TS__Class()\n    Set.name = \"Set\"\n    function Set.prototype.____constructor(self, values)\n        self[Symbol.toStringTag] = \"Set\"\n        self.size = 0\n        self.nextKey = {}\n        self.previousKey = {}\n        if values == nil then\n            return\n        end\n        local iterable = values\n        if iterable[Symbol.iterator] then\n            local iterator = iterable[Symbol.iterator](iterable)\n            while true do\n                local result = iterator:next()\n                if result.done then\n                    break\n                end\n                self:add(result.value)\n            end\n        else\n            local array = values\n            for ____, value in ipairs(array) do\n                self:add(value)\n            end\n        end\n    end\n    function Set.prototype.add(self, value)\n        local isNewValue = not self:has(value)\n        if isNewValue then\n            self.size = self.size + 1\n        end\n        if self.firstKey == nil then\n            self.firstKey = value\n            self.lastKey = value\n        elseif isNewValue then\n            self.nextKey[self.lastKey] = value\n            self.previousKey[value] = self.lastKey\n            self.lastKey = value\n        end\n        return self\n    end\n    function Set.prototype.clear(self)\n        self.nextKey = {}\n        self.previousKey = {}\n        self.firstKey = nil\n        self.lastKey = nil\n        self.size = 0\n    end\n    function Set.prototype.delete(self, value)\n        local contains = self:has(value)\n        if contains then\n            self.size = self.size - 1\n            local next = self.nextKey[value]\n            local previous = self.previousKey[value]\n            if next and previous then\n                self.nextKey[previous] = next\n                self.previousKey[next] = previous\n            elseif next then\n                self.firstKey = next\n                self.previousKey[next] = nil\n            elseif previous then\n                self.lastKey = previous\n                self.nextKey[previous] = nil\n            else\n                self.firstKey = nil\n                self.lastKey = nil\n            end\n            self.nextKey[value] = nil\n            self.previousKey[value] = nil\n        end\n        return contains\n    end\n    function Set.prototype.forEach(self, callback)\n        for ____, key in __TS__Iterator(\n            self:keys()\n        ) do\n            callback(_G, key, key, self)\n        end\n    end\n    function Set.prototype.has(self, value)\n        return (self.nextKey[value] ~= nil) or (self.lastKey == value)\n    end\n    Set.prototype[Symbol.iterator] = function(self)\n        return self:values()\n    end\n    function Set.prototype.entries(self)\n        local nextKey = self.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = {key, key}}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    function Set.prototype.keys(self)\n        local nextKey = self.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = key}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    function Set.prototype.values(self)\n        local nextKey = self.nextKey\n        local key = self.firstKey\n        return {\n            [Symbol.iterator] = function(self)\n                return self\n            end,\n            next = function(self)\n                local result = {done = not key, value = key}\n                key = nextKey[key]\n                return result\n            end\n        }\n    end\n    Set[Symbol.species] = Set\n    return Set\nend)()\n\nWeakMap = (function()\n    local WeakMap = __TS__Class()\n    WeakMap.name = \"WeakMap\"\n    function WeakMap.prototype.____constructor(self, entries)\n        self[Symbol.toStringTag] = \"WeakMap\"\n        self.items = {}\n        setmetatable(self.items, {__mode = \"k\"})\n        if entries == nil then\n            return\n        end\n        local iterable = entries\n        if iterable[Symbol.iterator] then\n            local iterator = iterable[Symbol.iterator](iterable)\n            while true do\n                local result = iterator:next()\n                if result.done then\n                    break\n                end\n                local value = result.value\n                self.items[value[1]] = value[2]\n            end\n        else\n            for ____, kvp in ipairs(entries) do\n                self.items[kvp[1]] = kvp[2]\n            end\n        end\n    end\n    function WeakMap.prototype.delete(self, key)\n        local contains = self:has(key)\n        self.items[key] = nil\n        return contains\n    end\n    function WeakMap.prototype.get(self, key)\n        return self.items[key]\n    end\n    function WeakMap.prototype.has(self, key)\n        return self.items[key] ~= nil\n    end\n    function WeakMap.prototype.set(self, key, value)\n        self.items[key] = value\n        return self\n    end\n    WeakMap[Symbol.species] = WeakMap\n    return WeakMap\nend)()\n\nWeakSet = (function()\n    local WeakSet = __TS__Class()\n    WeakSet.name = \"WeakSet\"\n    function WeakSet.prototype.____constructor(self, values)\n        self[Symbol.toStringTag] = \"WeakSet\"\n        self.items = {}\n        setmetatable(self.items, {__mode = \"k\"})\n        if values == nil then\n            return\n        end\n        local iterable = values\n        if iterable[Symbol.iterator] then\n            local iterator = iterable[Symbol.iterator](iterable)\n            while true do\n                local result = iterator:next()\n                if result.done then\n                    break\n                end\n                self.items[result.value] = true\n            end\n        else\n            for ____, value in ipairs(values) do\n                self.items[value] = true\n            end\n        end\n    end\n    function WeakSet.prototype.add(self, value)\n        self.items[value] = true\n        return self\n    end\n    function WeakSet.prototype.delete(self, value)\n        local contains = self:has(value)\n        self.items[value] = nil\n        return contains\n    end\n    function WeakSet.prototype.has(self, value)\n        return self.items[value] == true\n    end\n    WeakSet[Symbol.species] = WeakSet\n    return WeakSet\nend)()\n\nfunction __TS__SourceMapTraceBack(fileName, sourceMap)\n    _G.__TS__sourcemap = _G.__TS__sourcemap or ({})\n    _G.__TS__sourcemap[fileName] = sourceMap\n    if _G.__TS__originalTraceback == nil then\n        _G.__TS__originalTraceback = debug.traceback\n        debug.traceback = function(thread, message, level)\n            local trace\n            if ((thread == nil) and (message == nil)) and (level == nil) then\n                trace = _G.__TS__originalTraceback()\n            else\n                trace = _G.__TS__originalTraceback(thread, message, level)\n            end\n            if type(trace) ~= \"string\" then\n                return trace\n            end\n            local result = string.gsub(\n                trace,\n                \"(%S+).lua:(%d+)\",\n                function(file, line)\n                    local fileSourceMap = _G.__TS__sourcemap[tostring(file) .. \".lua\"]\n                    if fileSourceMap and fileSourceMap[line] then\n                        return (tostring(file) .. \".ts:\") .. tostring(fileSourceMap[line])\n                    end\n                    return (tostring(file) .. \".lua:\") .. tostring(line)\n                end\n            )\n            return result\n        end\n    end\nend\n\nfunction __TS__Spread(iterable)\n    local arr = {}\n    if type(iterable) == \"string\" then\n        do\n            local i = 0\n            while i < #iterable do\n                arr[#arr + 1] = string.sub(iterable, i + 1, i + 1)\n                i = i + 1\n            end\n        end\n    else\n        for ____, item in __TS__Iterator(iterable) do\n            arr[#arr + 1] = item\n        end\n    end\n    return __TS__Unpack(arr)\nend\n\nfunction __TS__StringConcat(str1, ...)\n    local args = {...}\n    local out = str1\n    for ____, arg in ipairs(args) do\n        out = tostring(out) .. tostring(arg)\n    end\n    return out\nend\n\nfunction __TS__StringEndsWith(self, searchString, endPosition)\n    if (endPosition == nil) or (endPosition > #self) then\n        endPosition = #self\n    end\n    return string.sub(self, (endPosition - #searchString) + 1, endPosition) == searchString\nend\n\nfunction __TS__StringPadEnd(self, maxLength, fillString)\n    if fillString == nil then\n        fillString = \" \"\n    end\n    if maxLength ~= maxLength then\n        maxLength = 0\n    end\n    if (maxLength == -math.huge) or (maxLength == math.huge) then\n        error(\"Invalid string length\", 0)\n    end\n    if (#self >= maxLength) or (#fillString == 0) then\n        return self\n    end\n    maxLength = maxLength - #self\n    if maxLength > #fillString then\n        fillString = tostring(fillString) .. tostring(\n            string.rep(\n                fillString,\n                math.floor(maxLength / #fillString)\n            )\n        )\n    end\n    return tostring(self) .. tostring(\n        string.sub(\n            fillString,\n            1,\n            math.floor(maxLength)\n        )\n    )\nend\n\nfunction __TS__StringPadStart(self, maxLength, fillString)\n    if fillString == nil then\n        fillString = \" \"\n    end\n    if maxLength ~= maxLength then\n        maxLength = 0\n    end\n    if (maxLength == -math.huge) or (maxLength == math.huge) then\n        error(\"Invalid string length\", 0)\n    end\n    if (#self >= maxLength) or (#fillString == 0) then\n        return self\n    end\n    maxLength = maxLength - #self\n    if maxLength > #fillString then\n        fillString = tostring(fillString) .. tostring(\n            string.rep(\n                fillString,\n                math.floor(maxLength / #fillString)\n            )\n        )\n    end\n    return tostring(\n        string.sub(\n            fillString,\n            1,\n            math.floor(maxLength)\n        )\n    ) .. tostring(self)\nend\n\nfunction __TS__StringReplace(source, searchValue, replaceValue)\n    searchValue = string.gsub(searchValue, \"[%%%(%)%.%+%-%*%?%[%^%$]\", \"%%%1\")\n    if type(replaceValue) == \"string\" then\n        replaceValue = string.gsub(replaceValue, \"[%%%(%)%.%+%-%*%?%[%^%$]\", \"%%%1\")\n        local result = string.gsub(source, searchValue, replaceValue, 1)\n        return result\n    else\n        local result = string.gsub(\n            source,\n            searchValue,\n            function(match) return replaceValue(_G, match) end,\n            1\n        )\n        return result\n    end\nend\n\nfunction __TS__StringSplit(source, separator, limit)\n    if limit == nil then\n        limit = 4294967295\n    end\n    if limit == 0 then\n        return {}\n    end\n    local out = {}\n    local index = 0\n    local count = 0\n    if (separator == nil) or (separator == \"\") then\n        while (index < (#source - 1)) and (count < limit) do\n            out[count + 1] = string.sub(source, index + 1, index + 1)\n            count = count + 1\n            index = index + 1\n        end\n    else\n        local separatorLength = #separator\n        local nextIndex = (string.find(source, separator, nil, true) or 0) - 1\n        while (nextIndex >= 0) and (count < limit) do\n            out[count + 1] = string.sub(source, index + 1, nextIndex)\n            count = count + 1\n            index = nextIndex + separatorLength\n            nextIndex = (string.find(source, separator, index + 1, true) or 0) - 1\n        end\n    end\n    if count < limit then\n        out[count + 1] = string.sub(source, index + 1)\n    end\n    return out\nend\n\nfunction __TS__StringStartsWith(self, searchString, position)\n    if (position == nil) or (position < 0) then\n        position = 0\n    end\n    return string.sub(self, position + 1, #searchString + position) == searchString\nend\n\nfunction __TS__StringTrim(self)\n    local result = string.gsub(self, \"^[%s ﻿]*(.-)[%s ﻿]*$\", \"%1\")\n    return result\nend\n\nfunction __TS__StringTrimEnd(self)\n    local result = string.gsub(self, \"[%s ﻿]*$\", \"\")\n    return result\nend\n\nfunction __TS__StringTrimStart(self)\n    local result = string.gsub(self, \"^[%s ﻿]*\", \"\")\n    return result\nend\n\n____symbolRegistry = {}\nfunction __TS__SymbolRegistryFor(key)\n    if not ____symbolRegistry[key] then\n        ____symbolRegistry[key] = __TS__Symbol(key)\n    end\n    return ____symbolRegistry[key]\nend\nfunction __TS__SymbolRegistryKeyFor(sym)\n    for key in pairs(____symbolRegistry) do\n        if ____symbolRegistry[key] == sym then\n            return key\n        end\n    end\nend\n\nfunction __TS__TypeOf(value)\n    local luaType = type(value)\n    if luaType == \"table\" then\n        return \"object\"\n    elseif luaType == \"nil\" then\n        return \"undefined\"\n    else\n        return luaType\n    end\nend\n\n","moduleName":"lualib_bundle","originalFileName":"lualib_bundle","originalFileHash":"e47dbcceb6feb356c0a65bf2c4fe49a5ebaf70f9d6ca00b4c7ff4547b288943a"}},"diagnostics":[]}